Metadata-Version: 2.1
Name: CurveSimilarity
Version: 0.1.0
Summary: A Python library for calculating the similarity of 1D, 2D, and 3D curves.
Home-page: http://github.com/Cynic2019/CurveSimilarity
Author: Yajing Li/李亚京
Author-email: liyajing20@mails.tsinghua.edu.cn
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.5
Description-Content-Type: text/markdown

# Curve Similarity Calculator
A Python library for calculating the similarity of 1D, 2D, and 3D curves.

## Description
This project implements the calculation of similarity for 1D, 2D, and 3D curves, with results ranging from [0, 1].

- 1D refers to one-dimensional lines (arrays formed by a series of x coordinates) and utilizes the Levenshtein distance for similarity computation.

- 2D denotes two-dimensional curves (curves formed by a series of x, y coordinates). After Procrustes normalization and rotation of the curve, the Fr茅chet distance is used to compute similarity.

- 3D describes three-dimensional curves (curves formed by a series of x, y, z coordinates). After Procrustes normalization and matrix transformation of the curve, the Fr茅chet distance is used for similarity calculation.

## System Requirements
Python 3.5 or above and related dependency packages.

If your Python version is below 3.5, please modify the `curve_types.py` file by changing
```
Curve = List[Point]
```
to
```
Curve = list
```
and remove the corresponding dependency import: 
```
from typing import List
```
This is because `typing` is a standard library in Python 3.5 and later.

## Start the Project
1. Setup
   - Clone or download the project source code.
   - Import the project into your preferred IDE.
   - Install the required libraries.

2. Sample Data
   - For 1D curves, a simple template data is provided directly in the __main__ of curve_similarity_1d.py.
   - For 2D and 3D curves, sample data files are provided in the sample_data folder:
      - 2D curves use the 'Longitude' and 'Latitude' for comparison.
      - 3D curves use 'Longitude', 'Latitude', and 'Height' for comparison.
   - Upon setting up, you can run the project and expect the following similarity outputs:
     ```
     1D similarity: 0.6
     2D similarity: 0.8944347521625984
     3D similarity: 0.9140664484123516
     ```

3. Using Your Own Data

   For 1D curves, if your curve is lengthy, it's recommended to change the hard-coded str1 and str2 in the __main__ of curve_similarity_1d.py to read from a file.

   For 2D and 3D curves, organize your data into a format that pandas can read.  
   Then, in curve_similarity_2d.py and curve_similarity_3d.py, modify the file-reading method in __main__ and adjust the column names like 'Longitude', 'Latitude', and 'Height' accordingly.

## License
This project is released under the MIT license.

## Contributing
Contributions are welcome! 

If you find any bugs or new requirements in the code, please feel free to contact me and develop together.

## Contact Information
If you have any questions about the project, feel free to contact me at:  
liyajing20@mails.tsinghua.edu.cn
